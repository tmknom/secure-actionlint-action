name: Secure actionlint
description: |
  This action securely runs actionlint in a Docker container to lint GitHub Actions workflow files.
  It automatically checks all YAML files in the `.github/workflows` directory.

  This action reduces security risks associated with software supply chain attacks, such as compromised third-party tools or tampered container images.
  To achieve this, it enforces strict container isolation, disables network connections, and drops unnecessary privileges.

  ## Usage

  ### Default

  ```yaml
    steps:
      - name: Secure actionlint
        uses: tmknom/secure-actionlint-action@319c663fe7a559d2bf907b36a8edfd80b89508b6 # v0.3.0
  ```

  ### Custom

  ```yaml
    steps:
      - name: Secure actionlint
        uses: tmknom/secure-actionlint-action@319c663fe7a559d2bf907b36a8edfd80b89508b6 # v0.3.0
        with:
          configuration-path: actionlint.yml
          ignore: |-
            "jobs" section is missing in workflow
            "on" section is missing .+
  ```

inputs:
  configuration-path:
    required: false
    description: The path for the actionlint configurations.
  ignore:
    required: false
    description: Specify regular expressions to ignore actionlint error messages, one per line.

runs:
  using: composite

  steps:
    - name: Install
      id: install
      env:
        IMAGE_REPOSITORY: rhysd/actionlint
        IMAGE_DIGEST: sha256:887a259a5a534f3c4f36cb02dca341673c6089431057242cdc931e9f133147e9 # 1.7.7
      run: |
        echo "::group::Install"
        set -x
        image="${IMAGE_REPOSITORY}@${IMAGE_DIGEST}"
        echo "image=${image}" >> "${GITHUB_OUTPUT}"
        docker pull "${image}"
      shell: bash

    - name: Show version
      env:
        IMAGE: ${{ steps.install.outputs.image }}
      run: |
        echo "::group::Show version"
        set -x
        docker run --interactive --rm --read-only --user guest \
          --security-opt no-new-privileges --cap-drop all --network none \
          "${IMAGE}" --version
        echo "::endgroup::"
      shell: bash

    - name: Lint
      env:
        CONFIG_PATH: ${{ inputs.configuration-path }}
        IMAGE: ${{ steps.install.outputs.image }}
        IGNORE: ${{ inputs.ignore }}
      run: |
        echo "::group::Lint"
        set -x
        declare -a flags=(-color)
        if [[ "${CONFIG_PATH}" != "" ]]; then
          flags+=(-config-file "${CONFIG_PATH}")
        fi

        if [[ "${IGNORE}" != "" ]]; then
          while IFS= read -r regex; do
            [[ "${regex}" == "" ]] && continue
            flags+=("-ignore" "${regex}")
          done <<<"${IGNORE}"
        fi

        docker run --interactive --rm --read-only --user guest \
          --security-opt no-new-privileges --cap-drop all --network none \
          --volume "${PWD}:${PWD}:ro" --workdir "${PWD}" \
          "${IMAGE}" "${flags[@]}"
        echo "::endgroup::"
      shell: bash
